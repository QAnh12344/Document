import pandas as pd
import numpy as np

INPUT = "NF-ToN-IoT-v2_1M_balanced.csv"
OUTPUT = "NF-ToN-IoT-v2_1M_balanced_shuffled.csv"
CHUNK_SIZE = 100_000
RANDOM_STATE = 1234

# 1. ƒê·ªçc file th√†nh t·ª´ng kh·ªëi
chunks = pd.read_csv(INPUT, chunksize=CHUNK_SIZE)

# 2. Shuffle th·ª© t·ª± c√°c kh·ªëi
chunks = list(chunks)
np.random.seed(RANDOM_STATE)
np.random.shuffle(chunks)

# 3. Shuffle trong t·ª´ng kh·ªëi (√≠t t·ªën RAM)
for i, chunk in enumerate(chunks):
    chunk = chunk.sample(frac=1.0, random_state=RANDOM_STATE + i)
    mode = "w" if i == 0 else "a"
    header = (i == 0)
    chunk.to_csv(OUTPUT, index=False, mode=mode, header=header)

print("‚úÖ ƒê√£ shuffle to√†n b·ªô v√† l∆∞u:", OUTPUT)




import pandas as pd
import numpy as np

# ==============================================================
# ‚öôÔ∏è C·∫§U H√åNH
# ==============================================================
INPUT = "NF-ToN-IoT-v2_100k.csv"           # file ƒë·∫ßu v√†o
OUTPUT = "NF-ToN-IoT-v2_100k_clean.csv"    # file sau khi l√†m s·∫°ch
CLIP_MIN, CLIP_MAX = -1e6, 1e6             # gi·ªõi h·∫°n gi√° tr·ªã c·ª±c tr·ªã

# ==============================================================
# 1Ô∏è‚É£ ƒê·ªçc d·ªØ li·ªáu
# ==============================================================
df = pd.read_csv(INPUT)
print("üìä K√≠ch th∆∞·ªõc ban ƒë·∫ßu:", df.shape)

if 'Attack' not in df.columns:
    raise ValueError("‚ùå Kh√¥ng t√¨m th·∫•y c·ªôt 'Attack' trong file CSV.")

# ==============================================================
# 2Ô∏è‚É£ X·ª≠ l√Ω NaN
# ==============================================================
# Xo√° d√≤ng kh√¥ng c√≥ nh√£n Attack
df = df.dropna(subset=['Attack']).reset_index(drop=True)

# X√°c ƒë·ªãnh c·ªôt s·ªë v√† c·ªôt chu·ªói
num_cols = df.select_dtypes(include=['int64', 'float64']).columns.tolist()
cat_cols = df.select_dtypes(include=['object']).columns.drop('Attack').tolist()

# ƒêi·ªÅn gi√° tr·ªã thi·∫øu
for col in num_cols:
    df[col] = df[col].fillna(df[col].median())

for col in cat_cols:
    df[col] = df[col].fillna(df[col].mode()[0])

print(f"‚úÖ ƒê√£ x·ª≠ l√Ω NaN: {len(num_cols)} c·ªôt s·ªë, {len(cat_cols)} c·ªôt chu·ªói.")

# ==============================================================
# 3Ô∏è‚É£ Gi·ªõi h·∫°n (clip) gi√° tr·ªã c·ª±c tr·ªã
# ==============================================================
df[num_cols] = df[num_cols].clip(lower=CLIP_MIN, upper=CLIP_MAX)
print(f"‚úÖ ƒê√£ gi·ªõi h·∫°n gi√° tr·ªã trong kho·∫£ng [{CLIP_MIN}, {CLIP_MAX}]")

# ==============================================================
# 4Ô∏è‚É£ L∆∞u d·ªØ li·ªáu s·∫°ch
# ==============================================================
df.to_csv(OUTPUT, index=False)
print("‚úÖ ƒê√£ l∆∞u file l√†m s·∫°ch:", OUTPUT)





import pandas as pd
from sklearn.utils import resample

INPUT = "NF-ToN-IoT-v2.csv"
OUTPUT = "NF-ToN-IoT-v2_1M_balanced.csv"
TARGET_TOTAL = 1_000_000
RANDOM_STATE = 1234

df = pd.read_csv(INPUT)

if 'Attack' not in df.columns:
    raise ValueError("File CSV kh√¥ng c√≥ c·ªôt 'Attack'")

classes = df['Attack'].unique()
num_classes = len(classes)
target_per_class = TARGET_TOTAL // num_classes
remainder = TARGET_TOTAL % num_classes

sampled_parts = []
for i, cls in enumerate(sorted(classes)):
    cls_df = df[df['Attack'] == cls]
    this_target = target_per_class + (1 if i < remainder else 0)
    part = cls_df.sample(
        n=this_target,
        replace=(len(cls_df) < this_target),
        random_state=RANDOM_STATE,
    ).sample(frac=1.0, random_state=RANDOM_STATE)  # shuffle ri√™ng t·ª´ng l·ªõp
    sampled_parts.append(part)

# concat m√† kh√¥ng shuffle to√†n c·ª•c
df_balanced = pd.concat(sampled_parts, ignore_index=True)

print(df_balanced['Attack'].value_counts())

df_balanced.to_csv(OUTPUT, index=False)
print("Saved to:", OUTPUT)





